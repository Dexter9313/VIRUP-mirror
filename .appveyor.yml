image:
- Visual Studio 2015
build:
    verbosity: detailed
environment:
  matrix:
    - QTPATH: 'C:\Qt\5.11\msvc2015'
      BUILD_TYPE: 32bit
      GENERATOR: '"Visual Studio 14 2015"'
    - QTPATH: 'C:\Qt\5.11\msvc2015_64'
      BUILD_TYPE: 64bit
      GENERATOR: '"Visual Studio 14 2015 Win64"'

install:
    - cd %APPVEYOR_BUILD_FOLDER%
    - for /f "delims=" %%x in (build.conf) do (set "%%x")
    - mkdir deps
    - cd deps
    ############################################################################
    # Install OpenVR
    ############################################################################
    - mkdir openvr
    - cd openvr
    - set URL="https://raw.githubusercontent.com/ValveSoftware/openvr/master/headers/openvr.h"
    - appveyor DownloadFile %URL% -FileName openvr.h
    - IF "%BUILD_TYPE%" == "64bit" (set WIN=win64) ELSE (set WIN=win32)
    - set URL="https://raw.githubusercontent.com/ValveSoftware/openvr/master/lib/%WIN%/openvr_api.lib"
    - appveyor DownloadFile %URL% -FileName openvr_api.lib
    - set URL="https://raw.githubusercontent.com/ValveSoftware/openvr/master/bin/%WIN%/openvr_api.dll"
    - appveyor DownloadFile %URL% -FileName openvr_api.dll
    - set OPENVR_INCLUDE_DIR=%APPVEYOR_BUILD_FOLDER%/deps/openvr/
    - set OPENVR_LIBRARY=%APPVEYOR_BUILD_FOLDER%/deps/openvr/openvr_api.lib
    - set OPENVR_SHARED=%APPVEYOR_BUILD_FOLDER%\deps\openvr\openvr_api.dll
    - cd ..
    ############################################################################
    # Install Leap Motion SDK
    ############################################################################
    - mkdir leap
    - cd leap
    - set URL="https://warehouse.leapmotion.com/apps/4183/download"
    - appveyor DownloadFile %URL% -FileName leap.zip
    - 7z x leap.zip > nul
    - move LeapDeveloperKit* Leap
    - IF "%BUILD_TYPE%" == "64bit" (set ARCH=x64) ELSE (set ARCH=x86)
    - set LEAP_INCLUDE_DIR=%APPVEYOR_BUILD_FOLDER%/deps/leap/Leap/LeapSDK/include
    - set LEAP_LIBRARY=%APPVEYOR_BUILD_FOLDER%/deps/leap/Leap/LeapSDK/lib/%ARCH%/Leap.lib
    - set LEAP_SHARED=%APPVEYOR_BUILD_FOLDER%\deps\leap\Leap\LeapSDK\lib\%ARCH%\Leap.dll
    - cd ..
    ############################################################################
    # Install Additional Project Deps
    ############################################################################
    - ..\%PROJECT_DIRECTORY%\ci\appveyor\install.bat


before_build:
    - set INNOSETUPPATH=C:\Program Files (x86)\Inno Setup 5
    - set BINDIR=%APPVEYOR_BUILD_FOLDER%\build\Release\
    - set Path=%QTPATH%;%QTPATH%/bin;%INNOSETUPPATH%;%PATH%
    - IF %APPVEYOR_REPO_TAG% == true (set VERSION=%APPVEYOR_REPO_TAG_NAME%) ELSE (set VERSION=snapshot-%APPVEYOR_BUILD_NUMBER%)

build_script:
    - cd %APPVEYOR_BUILD_FOLDER%
    - mkdir build
    - cd build
    - cmake .. -G %GENERATOR% -DOPENVR_INCLUDE_DIR=%OPENVR_INCLUDE_DIR% -DOPENVR_LIBRARY=%OPENVR_LIBRARY% -DLEAPMOTION_INCLUDE_DIR=%LEAP_INCLUDE_DIR% -DLEAPMOTION_LIBRARY=%LEAP_LIBRARY%
    - cmake --build . --config Release

after_build:
    - cd %BINDIR%
    - set RELEASE_DIR_NAME=%PROJECT_NAME%-%VERSION%-windows-%BUILD_TYPE%
    - set RELEASE_DIR=%BINDIR%\%RELEASE_DIR_NAME%
    - mkdir %RELEASE_DIR_NAME%
    - cd %RELEASE_DIR_NAME%
    - mkdir platforms
    - cd ..
    - copy %PROJECT_NAME%.exe %RELEASE_DIR%
    - copy %QTPATH%\bin\Qt5Core.dll %RELEASE_DIR%
    - copy %QTPATH%\bin\Qt5Gui.dll %RELEASE_DIR%
    - copy %QTPATH%\bin\Qt5Widgets.dll %RELEASE_DIR%
    - copy %QTPATH%\plugins\platforms\qwindows.dll %RELEASE_DIR%\platforms
    - copy %OPENVR_SHARED% %RELEASE_DIR%
    - copy %LEAP_SHARED% %RELEASE_DIR%
    - mkdir %RELEASE_DIR%\data
    - move %APPVEYOR_BUILD_FOLDER%\data\core %RELEASE_DIR%\data
    - move %APPVEYOR_BUILD_FOLDER%\data\%PROJECT_DIRECTORY% %RELEASE_DIR%\data
    - ..\..\%PROJECT_DIRECTORY%\ci\appveyor\before_archiving.bat
    - 7z a -tzip %RELEASE_DIR_NAME%.zip %RELEASE_DIR%
    - IF "%BUILD_TYPE%" == "64bit" (set ARCH=/DX64) ELSE (set ARCH=/DX86)
    - IF "%BUILD_TYPE%" == "64bit" (set VCREDIST=vc_redist.x64.exe) ELSE (set VCREDIST=vc_redist.x86.exe)
    - set VCREDIST_URL="https://download.microsoft.com/download/9/3/F/93FCF1E7-E6A4-478B-96E7-D4B285925B00/%VCREDIST%"
    - appveyor DownloadFile %VCREDIST_URL% -FileName %VCREDIST%
    - iscc.exe %ARCH% /DPROJECT_NAME=%PROJECT_NAME% /DPROJECT_MAINTAINER=%PROJECT_MAINTAINER% /DEXTERNAL_VERSION=%VERSION% /DPROJECT_URL=%PROJECT_URL% /DLICENSE=%APPVEYOR_BUILD_FOLDER%\LICENSE /DROOT_DIR=%RELEASE_DIR% /DVCREDIST=%RELEASE_DIR%/../%VCREDIST% /DVCREDIST_EXE=%VCREDIST% %APPVEYOR_BUILD_FOLDER%\innosetup\config.iss
    - move %APPVEYOR_BUILD_FOLDER%\innosetup\Output\setup.exe %APPVEYOR_BUILD_FOLDER%\innosetup\Output\%RELEASE_DIR_NAME%_setup.exe
artifacts:
  - path: build\Release\*.zip
    name: zipfile
  - path: innosetup\Output\*.exe
    name: installer
deploy:
  provider: GitHub
  auth_token:
    secure: zl4QU+v4bBjyTAJkEVn7y1tBF63bC79DMH9rzcfYGMZnW8d1bDr8LWGHhNCrL44w
  artifact: zipfile, installer
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
